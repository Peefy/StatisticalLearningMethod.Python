
class Chapter12:
    """
    第12章 条件随机场
    """
    def __init__(self):
        """
        第12章 条件随机场
        """
        pass

    def note(self):
        """
        chapter12 note
        """
        print('第12章 统计学习方法总结')
        print('10种主要的统计学习方法:感知机、k近邻法、朴素贝叶斯法、决策树、',
            '逻辑斯谛回归与最大熵模型、支持向量机、提升方法、EM算法、隐马尔可夫模型和条件随机场')
        print('1.适用问题')
        print('本书主要介绍监督学习方法.监督学习可以认为是学习一个模型,使它能对给定的输入预测相应的输出.',
            '监督学习包括分类、标注、回归.')
        print('分类问题是从实例的特征向量到类标记的预测问题,标注问题是从观测序列到标记序列(或状态序列)的预测问题.',
            '可以认为分类问题是标注问题的特殊情况.分类问题中可能的预测结果是二类或多类.',
            '而标注问题中可能的预测结果是所有的标记序列,其数目是指数级的.')
        print('感知机、k近邻法、朴素贝叶斯法、决策树、逻辑斯谛回归与最大熵模型、',
            '支持向量机、提升方法是分类方法.原始的感知机、支持向量机以及提升方法是针对二类分类的,',
            '可以将它们扩展到多类分类的。隐马尔可夫模型、条件随机场是标注方法.EM算法是含有隐变量的概率模型的一般学习算法,',
            '可以用于生成模型的非监督学习.')
        print('感知机、k近邻法、朴素贝叶斯法、决策树是简单的分类方法,具有模型直观、方法简单、实现容易等特点.',
            '逻辑斯谛回归与最大熵模型、支持向量机、提升方法是更复杂但更有效的分类方法，',
            '往往分类准确率更高。隐马尔可夫模型、条件随机场是主要的标注方法.通常条件随机场的标注准确率更高.')
        print('2.模型')
        print('分类问题与标注问题的预测模型都可以认为是表示从输入空间到输出空间的映射.它们可以写成条件概率分布P(Y|X)',
            '或决策函数Y=f(X)的形式.前者表示给定输入条件下输出的概率模型,后者表示输入到输出的非概率模型.',
            '有时,模型更直接地表示为概率模型,或者非概率模型;但有时模型兼有两种解释.')
        print('朴素贝叶斯法、隐马尔可夫模型是概率模型.感知机、k近邻法、支持向量机、提升方法是非概率模型.',
            '而决策树、逻辑斯谛回归与最大熵模型、条件随机场既可以看做是概率模型,又可以看做是非概率模型.')
        print('直接学习条件概率分布P(Y|X)或决策函数Y=f(X)的方法为判别方法,对应的模型是判别模型.',
            '感知机、k近邻法、决策树、逻辑斯谛回归与最大熵模型、支持向量机、提升方法、条件随机场是判别方法,',
            '首先学习联合概率分布P(X,Y),从而求得条件概率分布P(Y|X)的方法是生成方法,对应的模型是生成模型.',
            '朴素贝叶斯法、隐马尔可夫模型是生成方法')
        print('可以用非监督学习的方法学习生成模型.具体地,应用EM算法可以学习朴素贝叶斯模型以及隐马尔可夫模型')
        print('决策树是定义在一般的特征空间上的,可以含有连续变量或离散变量.感知机、支持向量机、k近邻法的特征空间是欧式空间',
            '(可以含有连续变量或离散变量.感知机、支持向量机、k近邻法的特征空间是欧式空间)')
        print('感知机模型是线性模型,而逻辑斯谛回归与最大熵模型、条件随机场是对数线性模型.k近邻法、决策树',
            '支持向量机(包含核函数)、提升方法使用的是非线性模型.')
        print('3.学习策略')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')
        print('')

chapter12 = Chapter12()

def main():
    chapter12.note()

if __name__ == '__main__':
    main()
